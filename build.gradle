plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	group = 'com.dnd'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '17'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	jacoco {
		toolVersion = '0.8.8'
	}

	def jacocoDir = layout.buildDirectory.dir("reports/")

	def QDomains = []
	for (qPattern in '*.QA'..'*.QZ') { // qPattern = '*.QA', '*.QB', ... '*.QZ'
		QDomains.add(qPattern + '*')
	}

	def jacocoExcludePatterns = [
			// 측정 안하고 싶은 패턴
			"**/*Application*",
			"**/*Config*",
			"**/*Exception*",
			"**/*Request*",
			"**/*Response*",
			"**/*Dto*",
			"**/*Interceptor*",
			"**/*Filter*",
			"**/*Resolver*"
	]

	jacocoTestReport {
		dependsOn test
		reports {
			html.required.set(true)
			xml.required.set(true)
			csv.required.set(false)
			html.destination jacocoDir.get().file("jacoco/test/index.html").asFile
			xml.destination jacocoDir.get().file("jacoco/test/index.xml").asFile
		}

		afterEvaluate {
			classDirectories.setFrom(
					files(classDirectories.files.collect {
						fileTree(dir: it, excludes: jacocoExcludePatterns + QDomains) // Querydsl 관련 제거
					})
			)
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}
}

bootJar {
	enabled = false
}
